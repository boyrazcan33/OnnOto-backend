# Replace just the entrypoint.sh part in your Dockerfile.railway

RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Start PostgreSQL in background\n\
/usr/local/bin/docker-entrypoint.sh postgres &\n\
PG_PID=$!\n\
\n\
# Wait for PostgreSQL to start properly with a better retry logic\n\
echo "Waiting for PostgreSQL to start..."\n\
for i in {1..30}; do\n\
  if pg_isready -U postgres; then\n\
    echo "PostgreSQL is ready."\n\
    break\n\
  fi\n\
  if [ $i -eq 30 ]; then\n\
    echo "Timed out waiting for PostgreSQL to start."\n\
    exit 1\n\
  fi\n\
  echo "Waiting... $i/30"\n\
  sleep 2\n\
done\n\
\n\
# Create database if it doesn\'t exist\n\
echo "Setting up database..."\n\
DB_NAME=${POSTGRES_DB:-onnoto}\n\
psql -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = '"'"'$DB_NAME'"'"'" | grep -q 1 || psql -U postgres -c "CREATE DATABASE $DB_NAME"\n\
\n\
# Enable PostGIS extension\n\
echo "Enabling PostGIS..."\n\
psql -U postgres -d $DB_NAME -c "CREATE EXTENSION IF NOT EXISTS postgis;"\n\
\n\
# Set memory limits for Java to prevent OOM kills\n\
export JAVA_OPTS="-Xms128m -Xmx384m -XX:+UseG1GC -XX:MaxMetaspaceSize=128m -XX:+UseSerialGC -XX:MaxRAM=512m"\n\
\n\
# Start the Spring Boot application with memory limits\n\
echo "Starting Spring Boot application..."\n\
cd /app/onnoto-backend\n\
# Use your existing environment variables instead of hardcoding values\n\
exec java $JAVA_OPTS -jar target/onnoto-backend-0.0.1-SNAPSHOT.jar\n\
' > /entrypoint.sh

RUN chmod +x /entrypoint.sh