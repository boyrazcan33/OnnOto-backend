spring.application.name=onnoto-backend

spring.datasource.url=${ONNOTO_DB_URL}
spring.datasource.username=${ONNOTO_DB_USERNAME}
spring.datasource.password=${ONNOTO_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Set to none since we're handling schema creation manually
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisPG10Dialect

# Disable Flyway since we're using custom migration
spring.flyway.enabled=false

# Set active profile to dev to enable test data seeding
spring.profiles.active=dev

spring.config.import=optional:file:.env[.properties]

server.port=8087

# Redis Configuration
spring.redis.host=${ONNOTO_REDIS_HOST}
spring.redis.port=${ONNOTO_REDIS_PORT}
spring.redis.password=${ONNOTO_REDIS_PASSWORD}
spring.redis.username=${ONNOTO_REDIS_USERNAME}
spring.redis.apikey=${ONNOTO_REDIS_APIKEY}



# Optional Redis connection pool settings
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.pool.max-wait=-1ms

logging.level.com.onnoto=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG

# Explicitly bind to IPv4 interfaces to ensure compatibility
# with clients that don't support IPv6
server.address=0.0.0.0

# Redis connection properties for better reliability
spring.redis.timeout=5000
spring.redis.connect-timeout=5000